2024-08-24 15:10:15 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-24 15:10:23 [restartedMain] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtFilter': Unsatisfied dependency expressed through field 'jwtUtil': No qualifying bean of type 'com.taskvantage.backend.Security.JwtUtil' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2024-08-24 15:10:23 [restartedMain] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [HikariPool-2 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
 java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
 java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-08-24 15:10:23 [restartedMain] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [HikariPool-2 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/sun.nio.ch.Net.poll(Native Method)
 java.base/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:191)
 java.base/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:201)
 java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346)
 java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796)
 java.base/java.net.Socket$SocketInputStream.implRead(Socket.java:1108)
 java.base/java.net.Socket$SocketInputStream.read(Socket.java:1095)
 java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:489)
 java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:483)
 java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1462)
 java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1068)
 java.base/java.io.FilterInputStream.read(FilterInputStream.java:119)
 com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
 com.mysql.cj.protocol.a.SimplePacketReader.readHeaderLocal(SimplePacketReader.java:81)
 com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
 com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
 com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
 com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
 com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
 com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
 com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:576)
 com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:762)
 com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:701)
 com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:157)
 com.mysql.cj.NativeSession.loadServerVariables(NativeSession.java:448)
 com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1259)
 com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:946)
 com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:805)
 com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438)
 com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
 com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189)
 com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
 com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
 com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
 com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
 com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:724)
 com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:703)
 java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
 java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
 java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-08-24 15:10:23 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2024-08-24 15:10:23 [restartedMain] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field jwtUtil in com.taskvantage.backend.Security.JwtFilter required a bean of type 'com.taskvantage.backend.Security.JwtUtil' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.taskvantage.backend.Security.JwtUtil' in your configuration.

2024-08-24 15:10:26 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-24 16:54:34 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-24 17:05:12 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-24 17:06:55 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-24 17:07:25 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
